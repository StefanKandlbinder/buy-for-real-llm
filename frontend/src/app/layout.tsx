import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ThemeProvider } from "@/shared/components/ThemeProvider";
import { TRPCReactProvider } from "@/trpc/client/trpc-provider";
import { ClerkProvider } from "@clerk/nextjs";
import { headers } from "next/headers";
import { dark, shadesOfPurple } from "@clerk/themes";
import { Toaster } from "@/components/ui/sonner";
import ErrorBoundary from "@/shared/components/Error/ErrorBoundary";
import { ErrorProvider } from "@/shared/components/Error/ErrorProvider";
import { ConfirmDialog } from "@/shared/components/ConfirmDialog";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const heads = await headers();
  const headerEntries = Array.from(heads.entries());
  return (
    <ClerkProvider
      appearance={{
        baseTheme: [dark],
        variables: { colorPrimary: "blue" },
        signIn: {
          baseTheme: [shadesOfPurple],
          variables: { colorPrimary: "green" },
        },
      }}
    >
      <html lang="en" suppressHydrationWarning>
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
          <TRPCReactProvider headerEntries={headerEntries}>
            <ThemeProvider
              attribute="class"
              defaultTheme="system"
              enableSystem
              disableTransitionOnChange
            >
              <ErrorProvider>
                <ErrorBoundary>
                  <ConfirmDialog>
                    {children}
                    <Toaster expand={true} />
                  </ConfirmDialog>
                </ErrorBoundary>
              </ErrorProvider>
            </ThemeProvider>
          </TRPCReactProvider>
        </body>
      </html>
    </ClerkProvider>
  );
}
